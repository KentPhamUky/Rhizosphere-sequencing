selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellips$vb[1,], y= ellips$vb[2,], z = ellips$vb[3,],
type = 'scatter3d', size = 20,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
groups = unique(mn_2020$Treatment)
groups = sort(groups, decreasing = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellips$vb[1,], y= ellips$vb[2,], z = ellips$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellips$vb[1,], y= ellips$vb[2,], z = ellips$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellips$vb[1,], y= ellips$vb[2,], z = ellips$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellips$vb[1,], y= ellips$vb[2,], z = ellips$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
View(ellips)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
ellips
View(fig)
View(ellips)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
#selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group] #group in this line used to be selected
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
ellips
ellips$vb
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
#selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group] #group in this line used to be selected
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
ellipse = ellipse3d(co)
ellipse = ellipse3d(co)
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
library(plotly)
#install.packages("rgl")
library(rgl)
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
library(plotly)
#install.packages("rgl")
library(rgl)
#install.packages("corpcor")
library(corpcor)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
metadata <- read_excel(path="wheat metadata.xlsx")                                          #reads in the metadata
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",               #read in the nmds axes
col_types = cols(group=col_character()))
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))                                  #Combine metadata with nmds and set treatment to factor
as.factor(metadata_nmds$Treatment)
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan",
TRUE ~ NA_character_)
mn_2020 = subset(metadata_nmds, Year==1)
mn_2021 = subset(metadata_nmds, Year==2)
mn_2020_UK = subset(mn_2020, Site =="UK")
mn_2020_KS = subset(mn_2020, Site =="KS")
mn_2020_1 = subset(mn_2020, Treatment ==1)
mn_2020_2 = subset(mn_2020, Treatment ==2)
mn_2020_3 = subset(mn_2020, Treatment ==3)
mn_2020_4 = subset(mn_2020, Treatment ==4)
mn_2020_5 = subset(mn_2020, Treatment ==5)
mn_2020_6 = subset(mn_2020, Treatment ==6)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020_UK_2 = subset(mn_2020_UK, Treatment == 2)
mn_2020_UK_3 = subset(mn_2020_UK, Treatment == 3)
mn_2020_UK_4 = subset(mn_2020_UK, Treatment == 4)
mn_2020_UK_5 = subset(mn_2020_UK, Treatment == 5)
mn_2020_UK_6 = subset(mn_2020_UK, Treatment == 6)
mn_2020_KS_1 = subset(mn_2020_KS, Treatment == 1)
mn_2020_KS_2 = subset(mn_2020_KS, Treatment == 2)
mn_2020_KS_3 = subset(mn_2020_KS, Treatment == 3)
mn_2020_KS_4 = subset(mn_2020_KS, Treatment == 4)
mn_2020_KS_5 = subset(mn_2020_KS, Treatment == 5)
mn_2020_KS_6 = subset(mn_2020_KS, Treatment == 6)
pal = c("blue", "red", "green", "pink", "purple", "cyan")
pal = setNames(pal, c("1", "2", "3", "4", "5", "6"))
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig
groups = unique(mn_2020$Treatment)
groups = sort(groups, decreasing = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
#selected = groups == group
xx = mn_2020$axis1[group]; yy = mn_2020$axis2[group]; zz = mn_2020$axis3[group] #group in this line used to be selected
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected] #group in this line used to be selected
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
fig
fig
rlang::last_error()
fig = add_trace(type = 'scatter3d', x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(type = 'scatter3d', x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, type = 'scatter3d', x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', marker = list(size=5))
fig
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
}
fig
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment,
mode = 'markers', marker = list(size=5))
fig
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3,
mode = 'markers', marker = list(size=5))
fig
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
library(plotly)
#install.packages("rgl")
library(rgl)
#install.packages("corpcor")
library(corpcor)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
metadata <- read_excel(path="wheat metadata.xlsx")                                          #reads in the metadata
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",               #read in the nmds axes
col_types = cols(group=col_character()))
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))                                  #Combine metadata with nmds and set treatment to factor
as.factor(metadata_nmds$Treatment)
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan",
TRUE ~ NA_character_)
mn_2020 = subset(metadata_nmds, Year==1)
mn_2021 = subset(metadata_nmds, Year==2)
mn_2020_UK = subset(mn_2020, Site =="UK")
mn_2020_KS = subset(mn_2020, Site =="KS")
mn_2020_1 = subset(mn_2020, Treatment ==1)
mn_2020_2 = subset(mn_2020, Treatment ==2)
mn_2020_3 = subset(mn_2020, Treatment ==3)
mn_2020_4 = subset(mn_2020, Treatment ==4)
mn_2020_5 = subset(mn_2020, Treatment ==5)
mn_2020_6 = subset(mn_2020, Treatment ==6)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020_UK_2 = subset(mn_2020_UK, Treatment == 2)
mn_2020_UK_3 = subset(mn_2020_UK, Treatment == 3)
mn_2020_UK_4 = subset(mn_2020_UK, Treatment == 4)
mn_2020_UK_5 = subset(mn_2020_UK, Treatment == 5)
mn_2020_UK_6 = subset(mn_2020_UK, Treatment == 6)
mn_2020_KS_1 = subset(mn_2020_KS, Treatment == 1)
mn_2020_KS_2 = subset(mn_2020_KS, Treatment == 2)
mn_2020_KS_3 = subset(mn_2020_KS, Treatment == 3)
mn_2020_KS_4 = subset(mn_2020_KS, Treatment == 4)
mn_2020_KS_5 = subset(mn_2020_KS, Treatment == 5)
mn_2020_KS_6 = subset(mn_2020_KS, Treatment == 6)
#Using rgl to 3d map
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3, size = 0.15,
col = mn_2020_UK_1$color)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, type = "shade", box = FALSE)
plot3d(x=metadata_nmds_2020_UK$axis1, y=metadata_nmds_2020_UK$axis2, z=metadata_nmds_2020_UK$axis3,
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2", zlab = "NMDS Axis 3",
col=metadata_nmds_2020$color, type ="s", size =1)
pal = c("blue", "red", "green", "pink", "purple", "cyan")
pal = setNames(pal, c("1", "2", "3", "4", "5", "6"))
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig
groups = unique(mn_2020$Treatment)
groups = sort(groups, decreasing = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'scatter3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig = add_trace(fig, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
fig
fig_2021 = plot_ly(mn_2021, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig_2021
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
library(plotly)
#install.packages("rgl")
library(rgl)
#install.packages("corpcor")
library(corpcor)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
metadata <- read_excel(path="wheat metadata.xlsx")                                          #reads in the metadata
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",               #read in the nmds axes
col_types = cols(group=col_character()))
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))                                  #Combine metadata with nmds and set treatment to factor
as.factor(metadata_nmds$Treatment)
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan",
TRUE ~ NA_character_)
mn_2020 = subset(metadata_nmds, Year==1)
mn_2021 = subset(metadata_nmds, Year==2)
mn_2020_UK = subset(mn_2020, Site =="UK")
mn_2020_KS = subset(mn_2020, Site =="KS")
mn_2020_1 = subset(mn_2020, Treatment ==1)
pal = c("blue", "red", "green", "pink", "purple", "cyan")
pal = setNames(pal, c("1", "2", "3", "4", "5", "6"))
fig_2020 = plot_ly() %>%
add_trace(fig_2020, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
fig_2020 = plot_ly() %>%
add_trace(x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
groups = unique(mn_2020$Treatment)
groups = sort(groups, decreasing = FALSE)
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
fig_2020 = add_trace(fig_2020, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
}
#levs = levels(groups)
for(i in 1:length(groups)){
group = groups[i]
selected = groups == group
xx = mn_2020$axis1[selected]; yy = mn_2020$axis2[selected]; zz = mn_2020$axis3[selected]
co = cov(cbind(xx,yy,zz))
S = make.positive.definite(co)
ellipse = ellipse3d(co)
ellips = ellipse3d(S, centre = c(mean(xx),mean(yy), mean(zz)), level =0.95)
#fig_2020 = add_trace(fig_2020, x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
#type = 'mesh3d', size = 1,
# opacity = 0.2,
#color = pal[i],
# showlegend = FALSE)
}
fig_2020 = plot_ly() %>%
add_trace(x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
#color = pal[i],
showlegend = FALSE)
fig_2020
fig_2020 = plot_ly() %>%
add_trace(x=ellipse$vb[1,], y= ellipse$vb[2,], z = ellipse$vb[3,],
type = 'mesh3d', size = 1,
opacity = 0.2,
color = pal[i],
showlegend = FALSE)
fig_2020

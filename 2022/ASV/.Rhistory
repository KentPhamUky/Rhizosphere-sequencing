library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
#reads ub the metadata
metadata <- read_excel(path="wheat metadata.xlsx")
View(metadata)
#read in the nmds axes
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds",
col_types = cols(group=col_character()))
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
#reads ub the metadata
metadata <- read_excel(path="wheat metadata.xlsx")
#read in the nmds axes
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds",
col_types = cols(group=col_character()))
#read in the nmds axes
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",
col_types = cols(group=col_character()))
View(nmds)
#if your metadata has "sample" as column title, this will be by=c('sample'='group')
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))
View(metadata_nmds)
plot = ggplot(metadata_nmds, aes(x = axis1, y = axis2))   +
geom_point(size = 2, aes(  colour = as.factor(combined), shape = Site) ) +
theme(axis.text.y = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(colour = "black", face = "bold", size = 12),
legend.text = element_text(size = 20, face ="bold", colour ="black"),
legend.position = "right", axis.title.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 14, colour = "black"),
legend.title = element_text(size = 14, colour = "black", face = "bold"),
panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2),
legend.key=element_blank()) +
labs(x = "NMDS1", colour = "Treatment", y = "NMDS2", shape = "Site")+
geom_polygon(data = hull_make, alpha = 0.2, aes(fill = factor(combined)), show.legend = FALSE)  +
#scale_color_brewer(palette = "Set3") + scale_fill_brewer(palette = "Set3") +
ggtitle("2020 Wheat Rhizosphere Microbial Community") + theme(plot.title = element_text(size=20, hjust = 0.5)) +
annotate(geom="text", x= -.30, y=-.35, label="Stress = 0.145",
color="red", size = 6)
hull_make <- metadata_nmds %>%
group_by(combined) %>%
slice(chull(axis1, axis2))
plot = ggplot(metadata_nmds, aes(x = axis1, y = axis2))   +
geom_point(size = 2, aes(  colour = as.factor(combined), shape = Site) ) +
theme(axis.text.y = element_text(colour = "black", size = 12, face = "bold"),
axis.text.x = element_text(colour = "black", face = "bold", size = 12),
legend.text = element_text(size = 20, face ="bold", colour ="black"),
legend.position = "right", axis.title.y = element_text(face = "bold", size = 14),
axis.title.x = element_text(face = "bold", size = 14, colour = "black"),
legend.title = element_text(size = 14, colour = "black", face = "bold"),
panel.background = element_blank(), panel.border = element_rect(colour = "black", fill = NA, size = 1.2),
legend.key=element_blank()) +
labs(x = "NMDS1", colour = "Treatment", y = "NMDS2", shape = "Site")+
geom_polygon(data = hull_make, alpha = 0.2, aes(fill = factor(combined)), show.legend = FALSE)  +
#scale_color_brewer(palette = "Set3") + scale_fill_brewer(palette = "Set3") +
ggtitle("2020 Wheat Rhizosphere Microbial Community") + theme(plot.title = element_text(size=20, hjust = 0.5)) +
annotate(geom="text", x= -.30, y=-.35, label="Stress = 0.145",
color="red", size = 6)
plot
View(hull_make)
View(hull_make)
View(metadata_nmds)
View(metadata_nmds)
View(metadata)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
#reads ub the metadata
metadata <- read_excel(path="wheat metadata.xlsx")
#read in the nmds axes
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",
col_types = cols(group=col_character()))
#if your metadata has "sample" as column title, this will be by=c('sample'='group')
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))
View(metadata_nmds)
View(metadata)
View(nmds)
View(metadata)
View(nmds)
View(nmds)
View(metadata_nmds)
library(tidyverse)
library(readxl)
library(broom)
library(purrr)
library(plyr)
library(RColorBrewer)
#install.packages("rgl")
library(rgl)
setwd("D:/GitHub/Rhizosphere-sequencing/2022/ASV")
metadata <- read_excel(path="wheat metadata.xlsx")                                          #reads in the metadata
nmds <- read_tsv(file="final.asv.ASV.subsample.thetayc.ASV.lt.ave.nmds.axes",               #read in the nmds axes
col_types = cols(group=col_character()))
metadata_nmds <- inner_join(metadata, nmds, by=c('group'))                                  #Combine metadata with nmds and set treatment to factor
as.factor(metadata_nmds$Treatment)
View(metadata_nmds)
metadata_nmds_2020 = subset(metadata_nmds, Year=1)
View(metadata_nmds_2020)
View(metadata_nmds_2020)
View(metadata_nmds_2020)
metadata_nmds_2020 = subset(metadata_nmds, Year==1)
View(metadata_nmds_2020)
metadata_nmds_2021 = subset(metadata_nmds, Year==2)
metadata_nmds$color = case_when(treatment == "1" ~ "blue",
treatment == "2" ~ "red",
treatment == "3" ~ "green",
treatment == "4" ~ "pink",
treatment == "5" ~ "purple",
treatment == "6" ~ "cyan")
metadata_nmds$color = case_when(Treatment == "1" ~ "blue",
Treatment == "2" ~ "red",
Treatment == "3" ~ "green",
Treatment == "4" ~ "pink",
Treatment == "5" ~ "purple",
Treatment == "6" ~ "cyan")
metadata_nmds$color = case_when(meatdata_nmds$Treatment == "1" ~ "blue",
Treatment == "2" ~ "red",
Treatment == "3" ~ "green",
Treatment == "4" ~ "pink",
Treatment == "5" ~ "purple",
Treatment == "6" ~ "cyan")
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
Treatment == "2" ~ "red",
Treatment == "3" ~ "green",
Treatment == "4" ~ "pink",
Treatment == "5" ~ "purple",
Treatment == "6" ~ "cyan")
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan")
View(metadata_nmds)
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan")
metadata_nmds_2020 = subset(metadata_nmds, Year==1)
metadata_nmds_2021 = subset(metadata_nmds, Year==2)
metadata_nmds$color = case_when(metadata_nmds$Treatment == "1" ~ "blue",
metadata_nmds$Treatment == "2" ~ "red",
metadata_nmds$Treatment == "3" ~ "green",
metadata_nmds$Treatment == "4" ~ "pink",
metadata_nmds$Treatment == "5" ~ "purple",
metadata_nmds$Treatment == "6" ~ "cyan",
TRUE ~ NA_character_)
metadata_nmds_2020 = subset(metadata_nmds, Year==1)
metadata_nmds_2021 = subset(metadata_nmds, Year==2)
View(metadata_nmds_2020)
plot3d(x=metadata_nmds_2020$axis1, y=metadata_nmds_2020$axis2, z=metadata_nmds_2020$axis3,
col=metadata_nmds_2020$color)
plot3d(x=metadata_nmds_2020$axis1, y=metadata_nmds_2020$axis2, z=metadata_nmds_2020$axis3,
col=metadata_nmds_2020$color, type ="s")
plot3d(x=metadata_nmds_2020$axis1, y=metadata_nmds_2020$axis2, z=metadata_nmds_2020$axis3,
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2", zlab = "NMDS Axis 3"
col=metadata_nmds_2020$color, type ="s", size =1)
plot3d(x=metadata_nmds_2020$axis1, y=metadata_nmds_2020$axis2, z=metadata_nmds_2020$axis3,
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2", zlab = "NMDS Axis 3",
col=metadata_nmds_2020$color, type ="s", size =1)
metadata_nmds_2020_UK = subset(metadata_nmds_2020, Site =="UK")
View(metadata_nmds_2020_UK)
metadata_nmds_2020_KS = subset(metadata_nmds_2020, Site =="KS")
plot3d(x=metadata_nmds_2020_UK$axis1, y=metadata_nmds_2020_UK$axis2, z=metadata_nmds_2020_UK$axis3,
xlab = "NMDS Axis 1", ylab = "NMDS Axis 2", zlab = "NMDS Axis 3",
col=metadata_nmds_2020$color, type ="s", size =1)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020 = subset(metadata_nmds, Year==1)
mn_2021 = subset(metadata_nmds, Year==2)
mn_2020_UK = subset(mn_2020, Site =="UK")
mn_2020_KS = subset(mn_2020, Site =="KS")
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
View(mn_2020_UK_1)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020_UK_2 = subset(mn_2020_UK, Treatment == 2)
mn_2020_UK_3 = subset(mn_2020_UK, Treatment == 3)
mn_2020_UK_4 = subset(mn_2020_UK, Treatment == 4)
mn_2020_UK_5 = subset(mn_2020_UK, Treatment == 5)
mn_2020_UK_6 = subset(mn_2020_UK, Treatment == 6)
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 0.95))
View(ellips_2020_UK_1)
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, box = FALSE)
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 1))
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 1))
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, box = FALSE)
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 0.5))
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, box = FALSE)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020_UK_2 = subset(mn_2020_UK, Treatment == 2)
mn_2020_UK_3 = subset(mn_2020_UK, Treatment == 3)
mn_2020_UK_4 = subset(mn_2020_UK, Treatment == 4)
mn_2020_UK_5 = subset(mn_2020_UK, Treatment == 5)
mn_2020_UK_6 = subset(mn_2020_UK, Treatment == 6)
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 0.5))
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, box = FALSE)
ellips_2020_UK_1 = ellipse3d(cov(cbind(mn_2020_UK_1$axis1, mn_2020_UK_1$axis2, mn_2020_UK_1$axis3)),
centre=c(mean(mn_2020_UK_1$axis1), mean(mn_2020_UK_1$axis2), mean(mn_2020_UK_1$axis3), level = 0.95))
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, box = FALSE)
mn_2020_1 = subset(mn_2020, Treatment ==1)
mn_2020 = subset(metadata_nmds, Year==1)
mn_2021 = subset(metadata_nmds, Year==2)
mn_2020_UK = subset(mn_2020, Site =="UK")
mn_2020_KS = subset(mn_2020, Site =="KS")
mn_2020_1 = subset(mn_2020, Treatment ==1)
ellips_2020_1 = ellipse3d(cov(cbind(mn_2020_1$axis1, mn_2020_1$axis2, mn_2020_1$axis3)),
centre=c(mean(mn_2020_1$axis1), mean(mn_2020_1$axis2), mean(mn_2020_1$axis3), level = 0.95))
mn_2020_2 = subset(mn_2020, Treatment ==2)
mn_2020_3 = subset(mn_2020, Treatment ==3)
mn_2020_4 = subset(mn_2020, Treatment ==4)
mn_2020_5 = subset(mn_2020, Treatment ==5)
mn_2020_6 = subset(mn_2020, Treatment ==6)
mn_2020_UK_1 = subset(mn_2020_UK, Treatment == 1)
mn_2020_UK_2 = subset(mn_2020_UK, Treatment == 2)
mn_2020_UK_3 = subset(mn_2020_UK, Treatment == 3)
mn_2020_UK_4 = subset(mn_2020_UK, Treatment == 4)
mn_2020_UK_5 = subset(mn_2020_UK, Treatment == 5)
mn_2020_UK_6 = subset(mn_2020_UK, Treatment == 6)
mn_2020_KS_1 = subset(mn_2020_KS, Treatment == 1)
mn_2020_KS_2 = subset(mn_2020_KS, Treatment == 2)
mn_2020_KS_3 = subset(mn_2020_KS, Treatment == 3)
mn_2020_KS_4 = subset(mn_2020_KS, Treatment == 4)
mn_2020_KS_5 = subset(mn_2020_KS, Treatment == 5)
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, type = "wire", box = FALSE)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, type = "dots", box = FALSE)
plot3d(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(ellips_2020_UK_1, col = "blue", alpha = 0.2, add = TRUE, type = "dots", box = FALSE)
plot3d(tetrahedron3d(),x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, type ="s", size = 1)
plot3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, size = 1)
plot3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, size = 15)
shapelist3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3,
col = mn_2020_UK_1$color, size = 15)
shapelist3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3, size = 0.15,
col = mn_2020_UK_1$color, size = 15)
shapelist3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3, size = 0.15,
col = mn_2020_UK_1$color)
rgl_init()
plot3d(tetrahedron3d() ,x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3, size = 0.15,
col = mn_2020_UK_1$color)
rgl.triangles(x=mn_2020_UK_1$axis1, y=mn_2020_UK_1$axis2, z=mn_2020_UK_1$axis3, size = 0.15,
col = mn_2020_UK_1$color)
plot3d
library(plotly)
install.packages("plotly")
library(plotly)
pal = setNames(pal, c("1", "2", "3", "4", "5", "6"))
pal = c("blue", "red", "green", "pink", "purple", "cyan")
pal = setNames(pal, c("1", "2", "3", "4", "5", "6"))
View(mn_2020)
fig = plot_ly(mn_2020_UK, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Year, symbols = c('x', 'o'), marker = list(size=10))
fig
fig = plot_ly(mn_2020_UK, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig
fig = plot_ly(mn_2020, x= ~axis1, y = ~axis2, z= ~axis3, color = ~Treatment, colors = pal,
mode = 'markers', symbol = ~Site, symbols = c('x', 'o'), marker = list(size=5))
fig

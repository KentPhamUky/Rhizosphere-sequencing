if (!require("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install("phyloseq")
library(ggplot2)
library(vegan)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
####Loading in####
#Plotting theme
theme_set(theme_bw())
####Loading in####
#Plotting theme
theme_set(theme_bw())
library(ggplot2)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
####Loading in####
#Plotting theme
theme_set(theme_bw())
sharedfile = "Y4.final.opti_mcc.0.03.subsample.shared"
taxfile = "Y4.final.opti_mcc.0.03.cons.taxonomy"
mapfile = "Metadata2024.csv"
mothur_data <- import_mothur(mothur_shared_file = sharedfile,
mothur_constaxonomy_file = taxfile)
# Import sample metadata
map <- read.csv(mapfile)
map <- sample_data(map)
# Assign rownames to be Sample ID's
rownames(map) <- map$group
moth_merge <- merge_phyloseq(mothur_data, map)
colnames(tax_table(moth_merge)) <- c("Kingdom", "Phylum", "Class",
"Order", "Family", "Genus")
Clean <- moth_merge %>%
subset_taxa(
Kingdom == "Bacteria" &
Family  != "mitochondria" &
Class   != "Chloroplast"
)
Clean_phylum <- Clean %>%
tax_glom(taxrank = "Phylum") %>%                     # agglomerate at phylum level
transform_sample_counts(function(x) {x/sum(x)} ) %>% # Transform to rel. abundance
psmelt() %>%                                         # Melt to long format
filter(Abundance > 0.02) %>%                         # Filter out low abundance taxa
arrange(Phylum)                                      # Sort data frame alphabetically by phylum
# Plot
phylum_colors <- c(
"#CBD588", "#5F7FC7", "orange","#DA5724", "#508578", "#CD9BCD",
"#AD6F3B", "#673770","#D14285", "#652926", "#C84248",
"#8569D5", "#5E738F","#D1A33D", "#8A7C64", "#599861"
)
# Ordinate
Clean_pcoa <- ordinate(
physeq = Clean,
method = "PCoA",
distance = "bray"
)
# Plot
plot_ordination(
physeq = Clean,
ordination = Clean_pcoa,
color = "Treatment",
shape = "Site",
title = "PCoA of 2024 by Treatment"
) +
scale_color_manual(values = c("#a65628", "red", "#ffae19",
"#4daf4a", "#1919ff", "darkorchid3", "magenta")
) +
geom_point(aes(color = Treatment), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
# Plot
plot_ordination(
physeq = Clean,
ordination = Clean_pcoa,
color = "Fulltreat",
shape = "Site",
title = "PCoA of 2024 by Treatment"
) +
scale_color_manual(values = c("#a65628", "red", "#ffae19",
"#4daf4a", "#1919ff", "darkorchid3", "magenta")
) +
geom_point(aes(color = Fulltreat), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
mothur_data <- import_mothur(mothur_shared_file = sharedfile,
mothur_constaxonomy_file = taxfile)
mapfile = "Metadata2024.csv"
# Import sample metadata
map <- read.csv(mapfile)
map <- sample_data(map)
# Assign rownames to be Sample ID's
rownames(map) <- map$group
moth_merge <- merge_phyloseq(mothur_data, map)
colnames(tax_table(moth_merge)) <- c("Kingdom", "Phylum", "Class",
"Order", "Family", "Genus")
Clean <- moth_merge %>%
subset_taxa(
Kingdom == "Bacteria" &
Family  != "mitochondria" &
Class   != "Chloroplast"
)
####Metadata####
#Not needed due to us subsampling-
# Make a data frame with a column for the read counts of each sample
sample_sum_df <- data.frame(sum = sample_sums(Clean))
# Ordinate
Clean_pcoa <- ordinate(
physeq = Clean,
method = "PCoA",
distance = "bray"
)
# Plot
plot_ordination(
physeq = Clean,
ordination = Clean_pcoa,
color = "Fulltreat",
shape = "Site",
title = "PCoA of 2024 by Treatment"
) +
scale_color_manual(values = c("#a65628", "red", "#ffae19",
"#4daf4a", "#1919ff", "darkorchid3", "magenta")
) +
geom_point(aes(color = Fulltreat), alpha = 0.7, size = 4) +
geom_point(colour = "grey90", size = 1.5)
####Permanova####
Clean_bray <- phyloseq::distance(Clean, method = "bray")
# make a data frame from the sample_data
sampledf <- data.frame(sample_data(moth_merge))
# Adonis test
adonis2(Clean_bray ~ Fulltreat+Site, data = sampledf)
library(ggplot2)
library(vegan)
library(plyr)
library(dplyr)
library(scales)
library(grid)
library(reshape2)
library(phyloseq)
library(microbiome)
library(pairwiseAdonis)
####Loading in####
#Plotting theme
theme_set(theme_bw())
sharedfile = "Y4.final.opti_mcc.0.03.subsample.shared"
taxfile = "Y4.final.opti_mcc.0.03.cons.taxonomy"
mapfile = "Metadata2024.csv"
mothur_data <- import_mothur(mothur_shared_file = sharedfile,
mothur_constaxonomy_file = taxfile)
# Import sample metadata
map <- read.csv(mapfile)
map <- sample_data(map)
# Assign rownames to be Sample ID's
rownames(map) <- map$group
moth_merge <- merge_phyloseq(mothur_data, map)
colnames(tax_table(moth_merge)) <- c("Kingdom", "Phylum", "Class",
"Order", "Family", "Genus")
#moth_sub <- moth_merge %>%
#subset_samples(Type == "Cashcrop") %>%
# prune_taxa(taxa_sums(.) > 0, .)
Clean <- moth_merge %>%
subset_taxa(
Kingdom == "Bacteria" &
Family  != "mitochondria" &
Class   != "Chloroplast"
)
####Permanova####
Clean_bray <- phyloseq::distance(Clean, method = "bray")
# make a data frame from the sample_data
sampledf <- data.frame(sample_data(moth_merge))
# Adonis test
adonis2(Clean_bray ~ Fulltreat+Site, data = sampledf)
pairwise.adonis2(Clean_bray ~ Fulltreat+Site, data = sampledf)
View(map)
map <- subset(map, Site== "UK")
map <- sample_data(map)
# Assign rownames to be Sample ID's
rownames(map) <- map$group
moth_merge <- merge_phyloseq(mothur_data, map)
colnames(tax_table(moth_merge)) <- c("Kingdom", "Phylum", "Class",
"Order", "Family", "Genus")
Clean <- moth_merge %>%
subset_taxa(
Kingdom == "Bacteria" &
Family  != "mitochondria" &
Class   != "Chloroplast"
)
####Permanova####
Clean_bray <- phyloseq::distance(Clean, method = "bray")
# make a data frame from the sample_data
sampledf <- data.frame(sample_data(moth_merge))
# Adonis test
adonis2(Clean_bray ~ Fulltreat, data = sampledf)
pairwise.adonis2(Clean_bray ~ Fulltreat, data = sampledf)
map <- read.csv(mapfile)
map <- subset(map, Site== "KS")
map <- sample_data(map)
# Assign rownames to be Sample ID's
rownames(map) <- map$group
moth_merge <- merge_phyloseq(mothur_data, map)
colnames(tax_table(moth_merge)) <- c("Kingdom", "Phylum", "Class",
"Order", "Family", "Genus")
#moth_sub <- moth_merge %>%
#subset_samples(Type == "Cashcrop") %>%
# prune_taxa(taxa_sums(.) > 0, .)
Clean <- moth_merge %>%
subset_taxa(
Kingdom == "Bacteria" &
Family  != "mitochondria" &
Class   != "Chloroplast"
)
# make a data frame from the sample_data
sampledf <- data.frame(sample_data(moth_merge))
####Permanova####
Clean_bray <- phyloseq::distance(Clean, method = "bray")
# make a data frame from the sample_data
sampledf <- data.frame(sample_data(moth_merge))
# Adonis test
adonis2(Clean_bray ~ Fulltreat, data = sampledf)
pairwise.adonis2(Clean_bray ~ Fulltreat, data = sampledf)
